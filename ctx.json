{ settings:
{ 'x-powered-by': true,
  etag: true,
  env: 'development',
  'subdomain offset': 2,
  view: [Function: View],
  views: '/Users/sky/.weg-tmp/www/client/views',
  'jsonp callback name': 'callback',
  'view engine': 'tpl' },
  list:
  [ RowDataPacket {
    id: 1,
    logo: null,
    title: 'express 开发web应用',
    moduleId: 1,
    moduleName: '编程语言',
    categoryId: 6,
    categoryName: 'Java',
    hits: 124,
    createDate: Thu Oct 01 2015 02:51:55 GMT+0800 (CST),
    keywords: null,
    summary: 'express 开发web应用',
    comments: 0,
    userId: '1',
    order: 1,
    status: 1,
    url: 'detail.php',
    isSelf: 0,
    isRec: 0 },
    RowDataPacket {
    id: 84,
    logo: null,
    title: 'Android 上下文菜单ContextMenu实现',
    moduleId: 2,
    moduleName: '移动开发',
    categoryId: 10,
    categoryName: 'Android',
    hits: 38,
    createDate: Sun Sep 02 2012 16:51:57 GMT+0800 (CST),
    keywords: '上下文菜单,ContextMenu',
    summary: 'Android 的上下文菜单类似于 PC 上的右键菜单。当为一个视图注册了上下文菜单之后，长按（2 秒左右）这个视图对象就会弹出一个浮动菜单，即上下文菜单。任何视图都可以注册上下文菜单，不过，最常见的是用于列表视图ListView的item。注意：Android 的上下文菜单不支持图标或快捷键。\r\n',
    comments: 0,
    userId: '1',
    order: 84,
    status: 1,
    url: 'detail.php',
    isSelf: 0,
    isRec: 0 }
  ],

  response:

  ServerResponse {
  domain: null,
  _events:
  { finish: [Object],
    close: [Object],
    unpipe: [Function: onunpipe],
    drain: [Function],
    error: [Function: onerror] },
  _eventsCount: 5,
  _maxListeners: undefined,
  output: [],
  outputEncodings: [],
  outputCallbacks: [],
  outputSize: 0,
  writable: true,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedHeader: {},
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket:
  Socket {
  _connecting: false,
  _hadError: false,
  _handle: [Object],
  _parent: null,
  _host: null,
  _readableState: [Object],
  readable: true,
  domain: null,
  _events: [Object],
  _eventsCount: 10,
  _maxListeners: undefined,
  _writableState: [Object],
  writable: true,
  allowHalfOpen: true,
  destroyed: false,
  bytesRead: 0,
  _bytesDispatched: 420,
  _sockname: null,
  _pendingData: null,
  _pendingEncoding: '',
  server: [Object],
  _idleTimeout: 120000,
  _idleNext: [Object],
  _idlePrev: [Object],
  _idleStart: 1187,
  parser: [Object],
  on: [Function: socketOnWrap],
  _paused: false,
  read: [Function],
  _consuming: true,
  _httpMessage: [Circular],
  _peername: [Object] },


connection:

Socket {
_connecting: false,
_hadError: false,
_handle: [Object],
_parent: null,
_host: null,
_readableState: [Ob
Tue Apr 05 2016 23:05:58 GMT+0800 (CST): ject],
readable: true,
domain: null,
_events: [Object],
_eventsCount: 10,
_maxListeners: undefined,
_writableState: [Object],
writable: true,
allowHalfOpen: true,
destroyed: false,
bytesRead: 0,
_bytesDispatched: 420,
_sockname: null,
_pendingData: null,
_pendingEncoding: '',
server: [Object],
_idleTimeout: 120000,
_idleNext: [Object],
_idlePrev: [Object],
_idleStart: 1187,
parser: [Object],
on: [Function: socketOnWrap],
_paused: false,
read: [Function],
_consuming: true,
_httpMessage: [Circular],
_peername: [Object] },
_header: null,
_headers:
{ 'x-powered-by': 'Express',
'content-type': 'text/html; charset=utf-8' },
_headerNames:
{ 'x-powered-by': 'X-Powered-By',
'content-type': 'Content-Type' },
_onPendingData: [Function: updateOutgoingData],
req:
IncomingMessage {
_readableState: [Object],
readable: true,
domain: null,
_events: {},
_eventsCount: 0,
_maxListeners: undefined,
socket: [Object],
connection: [Object],
httpVersionMajor: 1,
httpVersionMinor: 1,
httpVersion: '1.1',
complete: true,
headers: [Object],
rawHeaders: [Object],
trailers: {},
rawTrailers: [],
upgrade: false,
url: '/',
method: 'GET',
statusCode: null,
statusMessage: null,
client: [Object],
_consuming: false,
_dumped: false,
next: [Function: next],
originalUrl: '/news',
_parsedUrl: [Object],
params: {},
query: {},
res: [Circular],
_startTime: Tue Apr 05 2016 23:05:58 GMT+0800 (CST),
_remoteAddress: '::ffff:127.0.0.1',
body: {},
secret: undefined,
cookies: [Object],
signedCookies: {},
_parsedOriginalUrl: [Object],
sessionStore: [Object],
sessionID: 's3dOpot67Z-tzXzHdbMUZA7mneV7Y2Av',
session: [Object],
route: [Object] },
locals: {},
fis:
ResourceApi {
root: '/Users/sky/.weg-tmp/www',
prefix: 'client',
maps: [Object] },

bigpipe:
BigPipe {
options: [Object],
map: {},
pagelets: [],
pipelines: [],
rendered: [],
sources: {},
state: 'pending',
quicklings: [],
_events: [Object],
_eventsCount: 3,
_readableState: [Object],
readable: true,
domain: null,
_maxListeners: undefined },
writeHead: [Function: writeHead],
end: [Function: end] },
_locals: {},
cache: false,

resource:
{ CSS_HOOK: '<!--FIS_CSS_HOOK-->',
JS_HOOK: '<!--FIS_JS_HOOK-->',
BIGPIPE_HOOK: '<!--FIS_BIGPIPE_HOOK-->',
addScript: [Function],
getScripts: [Function],
addJs: [Function],
getJs: [Function],
addStyle: [Function],
getStyles: [Function],
addCss: [Function],
getCss: [Function],
setFramework: [Function],
getFramework: [Function],
load: [Function],
resolve: [Function],
getUrl: [Function],
supportBigPipe: [Function],
addQuicklingPagelet: [Function],
fork: [Function],
getResourceMap: [Function],
filter: [Function],
filterJs: [Function],
filterCss: [Function],
destroy: [Function],
fis:
ResourceApi {
root: '/Users/sky/.weg-tmp/www',
prefix: 'client',
maps: [Object] },
bigpipe:
BigPipe {
options: [Object],
map: {},
pagelets: [],
pipelines: [],
rendered: [],
sources: {},
state: 'pending',
quicklings: [],
_events: [Object],
_eventsCount: 3,
_readableState: [Object],
readable: true,
domain: null,
_maxListeners: undefined },
views: '/Users/sky/.weg-tmp/www/client/views',
config:
{ fisRootDir: '/Users/sky/.weg-tmp/www',
projectDir: 'client',
viewsDir: '/Users/sky/.weg-tmp/www/client/views' },


swig:
{ options: [Object],
cache: [Object],
extensions: {},
invalidateCache: [Function],
setFilter: [Function],
setTag: [Function],
setExtension: [Function],
parse: [Function],
parseFile: [Function],
precompile: [Function],
render: [Function],
renderFile: [Function],
compile: [Function],
compileFile: [Function],
run: [Function] } } }